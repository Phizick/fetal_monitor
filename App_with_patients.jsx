import React, { useState } from 'react';
import FetalMonitoringChart from './FetalMonitoringChart';
import PatientManagement from './PatientManagement';
import './App.css';

function App() {
  const [apiUrl, setApiUrl] = useState('http://localhost:8080');
  const [windowSize, setWindowSize] = useState(15);
  const [updateInterval, setUpdateInterval] = useState(100);
  const [enableSmoothing, setEnableSmoothing] = useState(true);
  const [showPathology, setShowPathology] = useState(true);
  const [showMedications, setShowMedications] = useState(true);
  const [activeTab, setActiveTab] = useState('monitoring'); // 'monitoring' –∏–ª–∏ 'patients'

  return (
    <div className="App">
      <header className="App-header">
        <h1>–°–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ñ–µ—Ç–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è</h1>
        
        {/* –ü–∞–Ω–µ–ª—å –Ω–∞—Å—Ç—Ä–æ–µ–∫ */}
        <div className="settings-panel">
          <div className="setting-group">
            <label>URL API:</label>
            <input
              type="text"
              value={apiUrl}
              onChange={(e) => setApiUrl(e.target.value)}
              placeholder="http://localhost:8080"
            />
          </div>
          
          <div className="setting-group">
            <label>–û–∫–Ω–æ –¥–∞–Ω–Ω—ã—Ö (—Å–µ–∫):</label>
            <input
              type="number"
              value={windowSize}
              onChange={(e) => setWindowSize(Number(e.target.value))}
              min="5"
              max="60"
            />
          </div>
          
          <div className="setting-group">
            <label>–ò–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (–º—Å):</label>
            <input
              type="number"
              value={updateInterval}
              onChange={(e) => setUpdateInterval(Number(e.target.value))}
              min="50"
              max="1000"
            />
          </div>
          
          <div className="setting-group">
            <label>
              <input
                type="checkbox"
                checked={enableSmoothing}
                onChange={(e) => setEnableSmoothing(e.target.checked)}
              />
              –°–≥–ª–∞–∂–∏–≤–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–æ–≤
            </label>
          </div>
          
          <div className="setting-group">
            <label>
              <input
                type="checkbox"
                checked={showPathology}
                onChange={(e) => setShowPathology(e.target.checked)}
              />
              –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–∞—Ç–æ–ª–æ–≥–∏–∏
            </label>
          </div>
          
          <div className="setting-group">
            <label>
              <input
                type="checkbox"
                checked={showMedications}
                onChange={(e) => setShowMedications(e.target.checked)}
              />
              –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø—Ä–µ–ø–∞—Ä–∞—Ç—ã
            </label>
          </div>
        </div>

        {/* –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –≤–∫–ª–∞–¥–æ–∫ */}
        <div className="tab-switcher">
          <button
            className={`tab-button ${activeTab === 'monitoring' ? 'active' : ''}`}
            onClick={() => setActiveTab('monitoring')}
          >
            üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
          </button>
          <button
            className={`tab-button ${activeTab === 'patients' ? 'active' : ''}`}
            onClick={() => setActiveTab('patients')}
          >
            üë• –ü–∞—Ü–∏–µ–Ω—Ç–∫–∏
          </button>
        </div>
      </header>

      <main className="App-main">
        {activeTab === 'monitoring' ? (
          <FetalMonitoringChart
            apiUrl={apiUrl}
            windowSize={windowSize}
            updateInterval={updateInterval}
            enableSmoothing={enableSmoothing}
            showPathology={showPathology}
            showMedications={showMedications}
          />
        ) : (
          <PatientManagement apiUrl={apiUrl} />
        )}
      </main>
    </div>
  );
}

export default App;
