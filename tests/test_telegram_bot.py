#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã Telegram –±–æ—Ç–∞
"""

import asyncio
import httpx
import json

async def test_telegram_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å Telegram –±–æ—Ç–æ–º"""
    
    print("=== –¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Telegram –±–æ—Ç–∞ ===")
    
    # 1. –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –≤—Ä–∞—á–∞
    print("\n1. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–∞—á–∞ –≤ —Å–∏—Å—Ç–µ–º—É...")
    try:
        async with httpx.AsyncClient() as client:
            response = await client.post(
                "http://localhost:8081/telegram/doctors",
                params={"chat_id": "123456789"},  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π chat_id
                timeout=30.0
            )
            
            if response.status_code == 200:
                print(f"[OK] –í—Ä–∞—á –¥–æ–±–∞–≤–ª–µ–Ω: {response.json()}")
            else:
                print(f"[ERROR] –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤—Ä–∞—á–∞: {response.status_code} - {response.text}")
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞: {e}")
    
    # 2. –°–æ–∑–¥–∞–µ–º –ø–∞—Ü–∏–µ–Ω—Ç–∫—É
    print("\n2. –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ü–∏–µ–Ω—Ç–∫–∏...")
    create_data = {
        "full_name": "–¢–µ—Å—Ç–æ–≤–∞—è –ü–∞—Ü–∏–µ–Ω—Ç–∫–∞ –¥–ª—è Telegram",
        "medications": ["–≥–∏–Ω–∏–ø—Ä–∞–ª"]
    }
    
    patient_id = None
    try:
        async with httpx.AsyncClient() as client:
            response = await client.post("http://localhost:8081/patients", json=create_data, timeout=30.0)
            
            if response.status_code == 200:
                patient = response.json()
                patient_id = patient["id"]
                print(f"[OK] –ü–∞—Ü–∏–µ–Ω—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∞: {patient_id}")
            else:
                print(f"[ERROR] –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {response.status_code}")
                return
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞: {e}")
        return
    
    # 3. –ù–∞–∑–Ω–∞—á–∞–µ–º –ø—Ä–µ–ø–∞—Ä–∞—Ç—ã (–¥–æ–ª–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ)
    print("\n3. –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤...")
    try:
        async with httpx.AsyncClient() as client:
            response = await client.put(
                f"http://localhost:8081/sim/medications/{patient_id}",
                json={"medications": ["–º–∞–≥–Ω–µ–∑–∏—è", "–æ–∫—Å–∏—Ç–æ—Ü–∏–Ω"]},
                timeout=30.0
            )
            
            if response.status_code == 200:
                print(f"[OK] –ü—Ä–µ–ø–∞—Ä–∞—Ç—ã –Ω–∞–∑–Ω–∞—á–µ–Ω—ã: {response.json()}")
            else:
                print(f"[ERROR] –û—à–∏–±–∫–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤: {response.status_code}")
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞: {e}")
    
    # 4. –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ (–¥–æ–ª–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ)
    print("\n4. –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞...")
    try:
        async with httpx.AsyncClient() as client:
            response = await client.post(
                f"http://localhost:8081/monitoring/start/{patient_id}",
                timeout=30.0
            )
            
            if response.status_code == 200:
                print(f"[OK] –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω: {response.json()}")
            else:
                print(f"[ERROR] –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {response.status_code}")
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞: {e}")
    
    # 5. –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    print("\n5. –û–∂–∏–¥–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ (30 —Å–µ–∫—É–Ω–¥)...")
    await asyncio.sleep(30)
    
    # 6. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ (–¥–æ–ª–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ)
    print("\n6. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞...")
    try:
        async with httpx.AsyncClient() as client:
            response = await client.post(
                f"http://localhost:8081/monitoring/stop/{patient_id}",
                timeout=30.0
            )
            
            if response.status_code == 200:
                print(f"[OK] –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {response.json()}")
            else:
                print(f"[ERROR] –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {response.status_code}")
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞: {e}")
    
    print("\n=== –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω ===")
    print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram –±–æ—Ç–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π!")

async def test_direct_bot():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –±–æ—Ç–∞ –Ω–∞–ø—Ä—è–º—É—é"""
    print("\n=== –ü—Ä—è–º–æ–π —Ç–µ—Å—Ç Telegram –±–æ—Ç–∞ ===")
    
    from telegram_bot import telegram_bot, notification_system
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –≤—Ä–∞—á–∞
    test_chat_id = "123456789"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π chat_id
    telegram_bot.add_doctor(test_chat_id)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è
    success = await telegram_bot.send_message(test_chat_id, "ü§ñ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞!")
    if success:
        print("[OK] –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
    else:
        print("[ERROR] –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    await notification_system.start_monitoring_notification("test_patient", "–¢–µ—Å—Ç–æ–≤–∞—è –ü–∞—Ü–∏–µ–Ω—Ç–∫–∞")
    await notification_system.medication_notification("test_patient", "–¢–µ—Å—Ç–æ–≤–∞—è –ü–∞—Ü–∏–µ–Ω—Ç–∫–∞", ["–≥–∏–Ω–∏–ø—Ä–∞–ª", "–º–∞–≥–Ω–µ–∑–∏—è"])
    await notification_system.stop_monitoring_notification("test_patient", "–¢–µ—Å—Ç–æ–≤–∞—è –ü–∞—Ü–∏–µ–Ω—Ç–∫–∞")

if __name__ == "__main__":
    print("–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ Telegram –±–æ—Ç–∞...")
    print("–í–ê–ñ–ù–û: –ó–∞–º–µ–Ω–∏—Ç–µ chat_id –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID —á–∞—Ç–∞ –≤—Ä–∞—á–∞!")
    
    # –°–Ω–∞—á–∞–ª–∞ —Ç–µ—Å—Ç–∏—Ä—É–µ–º –±–æ—Ç–∞ –Ω–∞–ø—Ä—è–º—É—é
    asyncio.run(test_direct_bot())
    
    # –ó–∞—Ç–µ–º —Ç–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å API
    asyncio.run(test_telegram_integration())
